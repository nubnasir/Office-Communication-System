/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OfficeFrame.java
 *
 * Created on Jan 18, 2013, 9:59:59 PM
 */
package officecomunicator;

import java.awt.Desktop;
import java.io.File;
import java.io.FileWriter;
import java.net.InetAddress;
import java.net.URI;
import java.util.Formatter;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;

/**
 *
 * @author TOSHIBA
 */
public class OfficeFrame extends javax.swing.JFrame {

    ThreadServer ts;
    ThreadSocket tsp;
    FileWriter savedName = null;
    Scanner readNames = null;
    public String Names[] = new String[1000];
    public int namesCounter = 0;
    public Formatter deleteAccount = null;
    public String delName;
    public int dontSave = 0;
    public int alreadyConnected = 0;
    public Thread ThSa;
    FileSenderFrame fsf;

    public String getFileName() {
        return FileName;
    }

    public void setFileName(String FileName) {
        this.FileName = FileName;
    }

    public String getFilePath() {
        return FilePath;
    }

    public void setFilePath(String FilePath) {
        this.FilePath = FilePath;
    }
    public String FilePath;
    public String FileName;

    public String getIpAccount() {
        return ipAccount;
    }

    public void setIpAccount(String ipAccount) {
        this.ipAccount = ipAccount;
    }

    public String getNameAccount() {
        return nameAccount;
    }

    public void setNameAccount(String nameAccount) {
        this.nameAccount = nameAccount;
    }
    public String nameAccount;
    public String ipAccount;

    public String getDeleteFriend() {
        return deleteFriend;
    }

    public void setDeleteFriend(String deleteFriend) {
        this.deleteFriend = deleteFriend;
    }
    public String deleteFriend;
    public String name;
    HTMLEditorKit text_panel_html_kit;

    public String getRemoveFriendGroup() {
        return removeFriendGroup;
    }

    public void setRemoveFriendGroup(String removeFriendGroup) {
        this.removeFriendGroup = removeFriendGroup;
    }
    public String removeFriendGroup;

    public String getChatafriend() {
        return chatafriend;
    }

    public void setChatafriend(String chatafriend) {
        this.chatafriend = chatafriend;
    }
    public String chatafriend;

    public String getLogInUser() {
        return logInUser;
    }

    public void setLogInUser(String logInUser) {
        this.logInUser = logInUser;
    }
    public String logInUser = null;

    public String getUserName() {
        return UserName;
    }

    public void setUserName(String UserName) {
        this.UserName = UserName;
    }
    public String UserName;

    /** Creates new form OfficeFrame */
    public OfficeFrame(String liu, String un) {
        initComponents();
        setLogInUser(liu);
        setUserName(un);
        designer("Welcome to OCS(Kotha)", "Blue");
        ts = new ThreadServer(this);
        ThSa = new Thread(ts);
        ThSa.start();
        openAndReadNames();
        SavedListManeger();
        setLocationRelativeTo(null);
        //openIconFile();
        text_panel_html_kit = new HTMLEditorKit();
        output.setEditorKit(text_panel_html_kit);
        output.setDocument(new HTMLDocument());
        //jTextPane1.setText("<a href=\"http://www.w3schools.com/\">Visit W3Schools</a> ");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextPane();
        message = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        friendList = new javax.swing.JList();
        jButton12 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        groupList = new javax.swing.JList();
        jButton4 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        SavedFriendList = new javax.swing.JList();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        saveAContact = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        jButton17 = new javax.swing.JButton();
        profileButton = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        Gchat = new javax.swing.JCheckBox();
        chatFriend = new javax.swing.JCheckBox();
        chatAllFriend = new javax.swing.JCheckBox();
        alert = new javax.swing.JCheckBox();
        sendAFile = new javax.swing.JButton();
        RefreshAll = new javax.swing.JButton();
        CTAFUIPA = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        rcvProgress = new javax.swing.JProgressBar();
        rcvDesText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("User");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        output.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User's WALL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        output.setContentType("text/html");
        output.setEditable(false);
        output.setFont(new java.awt.Font("Times New Roman", 0, 7));
        jScrollPane1.setViewportView(output);

        message.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Send", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        message.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 153, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        friendList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Connected Firends", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        friendList.setFont(new java.awt.Font("Times New Roman", 1, 10));
        friendList.setForeground(new java.awt.Color(0, 153, 0));
        jScrollPane2.setViewportView(friendList);

        jButton12.setFont(new java.awt.Font("Times New Roman", 0, 9));
        jButton12.setText("<html><b><u>V</u>iew</b><br>Profile</html>");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 9));
        jButton5.setText("Remove");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("Times New Roman", 0, 9));
        jButton15.setText("Refresh");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 9));
        jButton3.setText("<html><b><u>A</u>dd to</b><br>Group</html>");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jButton15))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(204, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        groupList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Group List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 10))); // NOI18N
        groupList.setFont(new java.awt.Font("Tahoma", 1, 10));
        groupList.setForeground(new java.awt.Color(0, 204, 204));
        jScrollPane3.setViewportView(groupList);

        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 9));
        jButton4.setText("Remove");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton16.setFont(new java.awt.Font("Times New Roman", 0, 9));
        jButton16.setText("Refresh");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton16)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addComponent(jButton16))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(204, 153, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        SavedFriendList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Saved Friends", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 0, 10))); // NOI18N
        SavedFriendList.setFont(new java.awt.Font("Times New Roman", 1, 10));
        SavedFriendList.setForeground(new java.awt.Color(51, 51, 255));
        jScrollPane4.setViewportView(SavedFriendList);

        jButton8.setFont(new java.awt.Font("Times New Roman", 0, 9));
        jButton8.setText("Delete");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Times New Roman", 0, 9));
        jButton9.setText("Edit");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        saveAContact.setFont(new java.awt.Font("Times New Roman", 0, 9));
        saveAContact.setText("Save");
        saveAContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAContactActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 9));
        jButton2.setText("Connect");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton17.setFont(new java.awt.Font("Times New Roman", 0, 9));
        jButton17.setText("Refresh");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveAContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator5))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveAContact)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addGap(11, 11, 11)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jButton17))
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
        );

        profileButton.setFont(new java.awt.Font("Times New Roman", 0, 11));
        profileButton.setForeground(new java.awt.Color(0, 153, 0));
        profileButton.setText("<html><b><u>V</u>iew My</b><br>Profile</html>");
        profileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileButtonActionPerformed(evt);
            }
        });

        logOut.setFont(new java.awt.Font("Times New Roman", 0, 11));
        logOut.setText("Log out");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });

        Gchat.setFont(new java.awt.Font("Times New Roman", 0, 11));
        Gchat.setText("<html><b>Group</b><br>Chat</html>");
        Gchat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GchatActionPerformed(evt);
            }
        });

        chatFriend.setFont(new java.awt.Font("Times New Roman", 0, 11));
        chatFriend.setText("<html><b>Chat only</b><br>with friend</html>");
        chatFriend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatFriendActionPerformed(evt);
            }
        });

        chatAllFriend.setFont(new java.awt.Font("Times New Roman", 0, 11));
        chatAllFriend.setSelected(true);
        chatAllFriend.setText("<html><b>Chat with</b><br>all Friends</html>");
        chatAllFriend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatAllFriendActionPerformed(evt);
            }
        });

        alert.setSelected(true);
        alert.setText("<html><b><u>A</u>lert Me</b><br>on Chat</html>");

        sendAFile.setFont(new java.awt.Font("Times New Roman", 0, 11));
        sendAFile.setText("<html><b><u>S</u>end</b><br>a file</html>");
        sendAFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendAFileActionPerformed(evt);
            }
        });

        RefreshAll.setFont(new java.awt.Font("Times New Roman", 0, 11));
        RefreshAll.setText("<html><b><u>R</u>efresh</b><br>All Lists</html>");
        RefreshAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshAllActionPerformed(evt);
            }
        });

        CTAFUIPA.setFont(new java.awt.Font("Tahoma", 0, 9));
        CTAFUIPA.setText("<html><b><u>C</u>onnect to</b><br>a friend using IP address</html>");
        CTAFUIPA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CTAFUIPAActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/officecomunicator/NETCUBE.GIF"))); // NOI18N

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 9));
        jButton7.setText("<html><a href=”http://www.facebook.com ”  >Update</a></html>");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        rcvProgress.setString("Receiver");
        rcvProgress.setStringPainted(true);

        rcvDesText.setEditable(false);
        rcvDesText.setFont(new java.awt.Font("Times New Roman", 0, 12));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12));
        jLabel2.setText("Received file Destination:");

        jButton11.setText("jButton11");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                    .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, 0, 236, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, 0, 236, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(alert, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(CTAFUIPA, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(RefreshAll)
                                .addComponent(logOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Gchat)
                                .addComponent(chatFriend)
                                .addComponent(chatAllFriend)
                                .addComponent(sendAFile)
                                .addComponent(profileButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rcvDesText, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rcvProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(profileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logOut, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Gchat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chatFriend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chatAllFriend, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(sendAFile, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RefreshAll, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(CTAFUIPA, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(alert, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(3, 3, 3)
                        .addComponent(rcvProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rcvDesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton11))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jMenu1.setText("OCS(Kotha)");

        jMenuItem2.setText("My Profile");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Log Out");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Connect to a friend using IP address");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Refresh All List");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText("Send a file");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Game");

        jMenuItem7.setText("TicTacToe");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("TicTacToe Lan");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Help");

        jMenuItem1.setText("Credits");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (SavedFriendList.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(null, "Please select a friend\nfrom saved friend list");
        } else {

            String sa = "" + SavedFriendList.getSelectedValue();
            int vva = sa.lastIndexOf(" ");
            String Ipaddress = sa.substring(vva + 1);
            for (int i = 0; i < ts.getCancle(); i++) {

                String s = ts.friendName[i];
                int vv = s.lastIndexOf(" ");
                if (s.substring(vv + 1).equals(Ipaddress)) {
                    alreadyConnected = 1;
                }
            }
            if (alreadyConnected == 0) {
                tsp = new ThreadSocket(this, Ipaddress);
                new Thread(tsp).start();
                dontSave = 1;
                alreadyConnected = 0;
            } else {
                JOptionPane.showMessageDialog(null, "Already Connected to " + sa);
            }
            alreadyConnected = 0;
        }
        alreadyConnected = 0;
        SavedListManeger();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void messageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageActionPerformed
        // TODO add your handling code here:
        if (chatAllFriend.isSelected()) {
            try {
                ts.setMsg("CCC" + name + ": " + message.getText());
                ts.writer();
                //output.setText(output.getText() + "Controller: " + message.getText() + "\n");

                designer(name + ": " + message.getText(), "Fuchsia");

            } catch (Exception ex) {
                designer("Problem!!!! in chatting()Frame. unable to chat with the server " + ex, "red");
            }
            message.setText("");
        } else if (Gchat.isSelected()) {
            try {
                ts.setMsg("CCC" + name + ": " + message.getText());
                ts.GroupWriter();
                //output.setText(output.getText() + "Controller: " + message.getText() + "\n");

                designer(name + ": " + message.getText(), "Fuchsia");

            } catch (Exception ex) {
                designer("Problem!!!! in chatting()Frame. unable to chat with the server " + ex, "red");
            }
            message.setText("");
        } else if (chatFriend.isSelected()) {
            if (friendList.getSelectedValue() != null) {
                setChatafriend("" + friendList.getSelectedValue());
                try {
                    ts.setMsg("CCC" + name + ": " + message.getText());
                    ts.ChatAWriter();
                    //output.setText(output.getText() + "Controller: " + message.getText() + "\n");

                    designer(name + ": " + message.getText(), "Fuchsia");

                } catch (Exception ex) {
                    designer("Problem!!!! in chatting()Frame. unable to chat with the server " + ex, "red");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please Select a friend from 'Connected Friend' List.");
            }
        }
    }//GEN-LAST:event_messageActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (friendList.getSelectedValue() != null) {
            setDeleteFriend("" + friendList.getSelectedValue());
            ts.setMsg(getDeleteFriend());
            ts.writer();
            setRemoveFriendGroup(getDeleteFriend());
            ts.removeFriendFromGroup();
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a friend from 'Connected Friend' List.");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (friendList.getSelectedValue() != null) {
            ts.friendGroup[ts.groupCounter] = "" + friendList.getSelectedValue();
            ts.groupCounter++;
            GroupListManeger();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a friend from 'Connected Friend' list");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (groupList.getSelectedValue() != null) {
            setRemoveFriendGroup("" + groupList.getSelectedValue());
            ts.removeFriendFromGroup();
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a friend from 'Group List' List.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void GchatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GchatActionPerformed
        // TODO add your handling code here:
        if (Gchat.isSelected()) {
            if (chatFriend.isSelected() || chatAllFriend.isSelected()) {
                clickAgain(chatFriend, chatAllFriend);
            }
        }
    }//GEN-LAST:event_GchatActionPerformed

    private void chatFriendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatFriendActionPerformed
        // TODO add your handling code here:
        if (chatFriend.isSelected()) {
            if (Gchat.isSelected() || chatAllFriend.isSelected()) {
                clickAgain(Gchat, chatAllFriend);
            }
        }
    }//GEN-LAST:event_chatFriendActionPerformed

    private void chatAllFriendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatAllFriendActionPerformed
        // TODO add your handling code here:
        if (chatAllFriend.isSelected()) {
            if (chatFriend.isSelected() || Gchat.isSelected()) {
                clickAgain(chatFriend, Gchat);
            }
        }
    }//GEN-LAST:event_chatAllFriendActionPerformed

    private void saveAContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAContactActionPerformed
        // TODO add your handling code here:
        SaveContacts sc = new SaveContacts(this);
        sc.setVisible(true);
    }//GEN-LAST:event_saveAContactActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if (SavedFriendList.getSelectedValue() != null) {
            if (JOptionPane.showConfirmDialog(null, "Delete " + SavedFriendList.getSelectedValue() + " from account?") < 1) {
                openAndReadNames();
                delName = "" + SavedFriendList.getSelectedValue();
                deleteFromSavedAccount();
                openAndReadNames();
                SavedListManeger();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a friend from 'Saved Friend' list.");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void profileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileButtonActionPerformed
        // TODO add your handling code here:
        EditMyProfile emp = new EditMyProfile(this);
        try {
            Scanner input = new Scanner(new File("C://OCS(Kotha)//" + getLogInUser() + "//My Profile.doc"));
            if (input.hasNext()) {
                String im = input.nextLine();
                if (!"none".equals(im)) {
                    try {
                        emp.imageLebel.setIcon(new ImageIcon("C://OCS(Kotha)//" + getLogInUser() + "//My Picture//" + im));
                        emp.imageName = im;
                    } catch (Exception ex) {
                        emp.imageLebel.setIcon(new ImageIcon(getClass().getResource("default.PNG")));
                    }
                } else {
                    try {
                        emp.imageLebel.setIcon(new ImageIcon(getClass().getResource("default.PNG")));
                    } catch (Exception ex) {
                    }
                }
            }
            if (input.hasNext()) {
                emp.userName.setText(input.nextLine());
            }
            if (input.hasNext()) {
                emp.email.setText(input.nextLine());
            }
            if (input.hasNext()) {
                emp.BirthDay.setText(input.nextLine());
            }
            if (input.hasNext()) {
                emp.study.setText(input.nextLine());
            }
            if (input.hasNext()) {
                emp.work.setText(input.nextLine());
            }
            while (input.hasNext()) {
                emp.about.setText(emp.about.getText() + input.nextLine() + "\n");
            }
            input.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        emp.setVisible(true);
    }//GEN-LAST:event_profileButtonActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        if (friendList.getSelectedValue() != null) {
            try {
                ts.setMsg("Profile" + friendList.getSelectedValue());
                ts.writer();
            } catch (Exception ex) {
                designer("Problem!!!! in chatting()Frame. unable to chat with the server " + ex, "red");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a friend from Friend List.");
        }

    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if (SavedFriendList.getSelectedValue() != null) {
            Editor e = new Editor("" + SavedFriendList.getSelectedValue(), this);
            String ns = "" + SavedFriendList.getSelectedValue();
            int vv = ns.lastIndexOf(" ");
            e.nameLebel.setText(ns.substring(0, vv));
            e.Iplebel.setText(ns.substring(vv + 1));
            e.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Please select a friend from Saved Friend list.");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        // TODO add your handling code here:
        ts.setMsg("Remove");
        ts.removewriter();
    }//GEN-LAST:event_logOutActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        ListManeger();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        GroupListManeger();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        SavedListManeger();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void RefreshAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshAllActionPerformed
        // TODO add your handling code here:
        ListManeger();
        GroupListManeger();
        SavedListManeger();
    }//GEN-LAST:event_RefreshAllActionPerformed

    private void CTAFUIPAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CTAFUIPAActionPerformed
        // TODO add your handling code here:
        String Ipaddress = JOptionPane.showInputDialog(null, "Insert The IP Address");
        if (Ipaddress != null) {
            for (int i = 0; i < ts.getCancle(); i++) {

                String s = ts.friendName[i];
                int vv = s.lastIndexOf(" ");
                if (s.substring(vv + 1).equals(Ipaddress)) {
                    alreadyConnected = 1;
                }
            }
            if (alreadyConnected == 0) {
                tsp = new ThreadSocket(this, Ipaddress);
                new Thread(tsp).start();
                dontSave = 0;
            } else {
                JOptionPane.showMessageDialog(null, "Already Connected to " + Ipaddress);
            }
        }
        alreadyConnected = 0;
    }//GEN-LAST:event_CTAFUIPAActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (Desktop.isDesktopSupported()) {
            try {
                Desktop.getDesktop().browse(new URI("https://www.ocskotha.wordpress.com/"));
            } catch (Exception e) { /* TODO: error handling */ }
        } else { /* TODO: error handling */ }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        HelpA hp = new HelpA();
        hp.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        profileButtonActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void sendAFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendAFileActionPerformed
        // TODO add your handling code here:
        if (friendList.getSelectedValue() == null) {
            if (fsf == null) {
                fsf = new FileSenderFrame(this);
                fsf.setVisible(true);
            } else {
                fsf.setVisible(true);
            }
        } else {
            if (fsf == null) {
                fsf = new FileSenderFrame(this);
                fsf.swf.setText("" + friendList.getSelectedValue());
                fsf.swf.doClick();
                fsf.swaf.doClick();
                fsf.setVisible(true);
            } else {
                fsf.setVisible(true);
            }
        }
    }//GEN-LAST:event_sendAFileActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser fc = new JFileChooser();
            fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            int result = fc.showOpenDialog(this);
            if (result == JFileChooser.CANCEL_OPTION) {
            }
            File fileN = fc.getSelectedFile();
            if (fileN.exists()) {
                rcvDesText.setText("" + fileN.getPath() + "\\");

                try {
                    Formatter rcvFile = new Formatter(new File("C://OCS(Kotha)//" + getLogInUser() + "//file.txt"));
                    rcvFile.format("%s", rcvDesText.getText());
                    rcvFile.close();
                } catch (Exception ex) {
                }
            }
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        logOutActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        CTAFUIPAActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        RefreshAllActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        sendAFileActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        MyTicToc myt = new MyTicToc();
        myt.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        if (friendList.getSelectedValue() != null) {
            setChatafriend("" + friendList.getSelectedValue());
            try {
                ts.setMsg("GameAPlay");
                ts.ChatAWriter();
                //output.setText(output.getText() + "Controller: " + message.getText() + "\n");

                //designer(name + ": " + message.getText(), "Fuchsia");

            } catch (Exception ex) {
                designer("Problem!!!! in chatting()Frame. unable to chat with the server " + ex, "red");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please, Select a friend from Connected Friend list\nThen press TicTacToe Lan");
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    public void ListManeger() {
        String friName[] = new String[ts.getCancle()];
        int i = 0;
        for (i = 0; i < ts.getCancle(); i++) {
            friName[i] = ts.friendName[i];
        }

        friendList.setListData(friName);

        if (ts.getCancle() <= 0) {
            String a[] = new String[0];
            friendList.setListData(a);
        }
    }

    public void GroupListManeger() {
        String friName[] = new String[ts.getGroupCounter()];
        int i = 0;
        for (i = 0; i < ts.getGroupCounter(); i++) {
            friName[i] = ts.friendGroup[i];
        }

        groupList.setListData(friName);

        if (ts.getCancle() <= 0) {
            String a[] = new String[0];
            groupList.setListData(a);
        }
    }

    public void SavedListManeger() {
        String friName[] = new String[namesCounter];
        int i = 0;
        for (i = 0; i < namesCounter; i++) {
            friName[i] = Names[i];
        }

        SavedFriendList.setListData(friName);

        if (namesCounter <= 0) {
            String a[] = new String[0];
            SavedFriendList.setListData(a);
        }
    }

    public void designer(String line, String col) {
        try {
            text_panel_html_kit.insertHTML((HTMLDocument) output.getDocument(), output.getDocument().getLength(), "<font size=7 color=" + col + ">" + line + "</font><font size=7 color=" + col + ">" + "</font>", 0, 0, null);
            //sR.recode.setText(sR.recode.getText() + line + "\n");
        } catch (Exception ex) {
        }
    }

    public void clickAgain(JCheckBox jCBA, JCheckBox jCBB) {
        if (jCBA.isSelected()) {
            jCBA.doClick();
        }
        if (jCBB.isSelected()) {
            jCBB.doClick();
        }
    }

    public void savedFriendFile() {
        try {
            savedName = new FileWriter(new File("C://OCS(Kotha)//" + getLogInUser() + "//Saved Names.doc"), true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error in saved Name file. " + ex);
        }
    }

    public void closeSavedFriendFile() {
        try {
            savedName.close();
        } catch (Exception ex) {
        }
    }

    public void openAndReadNames() {
        try {
            readNames = new Scanner(new File("C://OCS(Kotha)//" + getLogInUser() + "//Saved Names.doc"));
            namesCounter = 0;
            while (readNames.hasNext()) {
                Names[namesCounter] = readNames.nextLine();
                namesCounter++;
            }
            readNames.close();
        } catch (Exception ex) {
        }
    }

    public void saveTheAccount() {
        try {
            savedFriendFile();
            savedName.write(getNameAccount() + " " + getIpAccount() + "\n");
            closeSavedFriendFile();
            openAndReadNames();
            SavedListManeger();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error to save the account. " + ex);
        }
    }

    public void deleteFromSavedAccount() {
        try {
            deleteAccount = new Formatter(new File("C://OCS(Kotha)//" + getLogInUser() + "//Saved Names.doc"));
            for (int a = 0; a < namesCounter; a++) {
                if (Names[a].equals(delName)) {
                } else {
                    deleteAccount.format("%s\n", Names[a]);
                }
            }
            deleteAccount.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error to delete. " + ex);
        }
    }

    public void setID() {
        profileButton.setText("<html><b><u>" + UserName + "</u>'s</b><br>Profile</html>");
        try {
            String s = "" + InetAddress.getLocalHost();
            int vv = s.lastIndexOf("/");
            name = getUserName() + " " + s.substring(vv + 1);
        } catch (Exception ex) {
        }
        openAndReadNames();
        SavedListManeger();
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CTAFUIPA;
    public javax.swing.JCheckBox Gchat;
    private javax.swing.JButton RefreshAll;
    private javax.swing.JList SavedFriendList;
    public javax.swing.JCheckBox alert;
    public javax.swing.JCheckBox chatAllFriend;
    public javax.swing.JCheckBox chatFriend;
    public javax.swing.JList friendList;
    private javax.swing.JList groupList;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JButton logOut;
    public javax.swing.JTextField message;
    public javax.swing.JTextPane output;
    private javax.swing.JButton profileButton;
    public javax.swing.JTextField rcvDesText;
    public javax.swing.JProgressBar rcvProgress;
    private javax.swing.JButton saveAContact;
    private javax.swing.JButton sendAFile;
    // End of variables declaration//GEN-END:variables
}
